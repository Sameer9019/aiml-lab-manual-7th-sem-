from sklearn.datasets import load_iris
from sklearn.neighbors import KNeighborsClassifier
import numpy as np
from sklearn.model_selection import train_test_split

iris_dataset = load_iris()

print("\nIRIS FEATURES\TRAINING_VALUES",iris_dataset.target_names)
for i in range(len(iris_dataset.target_names)):
    print("[{0}]:[{1}]".format(i,iris_dataset.target_names))
print("IRIS DATA",iris_dataset["data"]) 

x_test,x_train,y_test,y_train = train_test_split(iris_dataset["data"],iris_dataset["target"])   

print("\nTARGET\n",iris_dataset["target"])
print("X_TRAIN\n",x_train)
print("X_TEST\n",x_test)
print("Y_TRAIN\n",y_train)
print("Y_TEST\n",y_test)

kn=KNeighborsClassifier(n_neighbors=5)
kn.fit(x_train, y_train)

x_new =np.array([[5,2.9,1,0.2]])
prediction = kn.predict(x_new)
print("FEATURE VALUES {}".format(prediction))
print("TARGET VALUES {}".format(iris_dataset["target_names"][prediction]))

i=1
x=x_test[i]
x_new=np.asarray([x])
print("X_NEW",x_new)

for i in range(len(x_test)):
    x=x_test[i]
    x_new=np.asarray([x])
    prediction = kn.predict(x_new)
    print("\n ACTUAL: {0} {1} , PREDICTED: {2} {3}\n".format(y_test[i],iris_dataset["target_names"][y_test[i]],prediction,iris_dataset["target_names"][prediction]))
    print("Accuracy score {:.2f}".format(kn.score(x_test,y_test)))

